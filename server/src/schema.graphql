scalar JSON

## Application Types

type NonFungibleToken {
  name: String!
  symbol: String!
  token_id: String!
  extras: JSON!
  decimals: Int!
  owner: String!
}

type PublishedOperation {
  id: Int!
  hash: String!
  initiator: String!
  method: String!
  params: String!
  status: String!
  retry: Boolean!
}

type SettingsContracts {
  nftFaucet: String!
  nftFactory: String!
}

type SettingsAdmin {
  address: String!
  secret: String!
}

type Settings {
  tzStatsUrl: String!
  rpc: String!
  admin: SettingsAdmin!
  contracts: SettingsContracts!
}

## Toplevel Types

type Query {
  nfts(limit: Int): [NonFungibleToken]
  nftByTokenId(token_id: String!): NonFungibleToken
  nftsByOwner(owner_address: String!): [NonFungibleToken]
  nftByOperation(operation_address: String!): NonFungibleToken
  publishedOperationByHash(hash: String!): PublishedOperation
  settings: Settings!
}

type Mutation {
  createNonFungibleToken(
    owner_address: String!
    name: String!
    description: String!
    symbol: String!
    ipfs_cid: String!
  ): PublishedOperation!

  createNonFungibleTokenSync(
    owner_address: String!
    name: String!
    description: String!
    symbol: String!
    ipfs_cid: String!
  ): PublishedOperation!
}

type Subscription {
  operationSent: PublishedOperation
  operationConfirmed: PublishedOperation
}
