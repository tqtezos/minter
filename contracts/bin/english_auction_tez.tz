{ parameter
    (or (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
                (nat %bid))
            (or (nat %cancel)
                (pair %configure
                   (mutez %opening_price)
                   (pair (nat %min_raise_percent)
                         (pair (nat %round_time)
                               (pair (nat %extend_time)
                                     (pair (list %asset
                                              (pair (address %fa2_address) (list %fa2_batch (pair (nat %token_id) (nat %amount)))))
                                           (pair (timestamp %start_time) (timestamp %end_time)))))))))
        (nat %resolve)) ;
  storage
    (pair (pair %simple_admin
             (pair (address %admin) (bool %paused))
             (option %pending_admin address))
          (pair (nat %current_id)
                (pair (nat %max_auction_time)
                      (pair (nat %max_config_to_start_time)
                            (big_map %auctions
                               nat
                               (pair (mutez %current_bid)
                                     (pair (timestamp %start_time)
                                           (pair (timestamp %last_bid_time)
                                                 (pair (int %round_time)
                                                       (pair (int %extend_time)
                                                             (pair (list %asset
                                                                      (pair (address %fa2_address) (list %fa2_batch (pair (nat %token_id) (nat %amount)))))
                                                                   (pair (nat %min_raise_percent) (pair (timestamp %end_time) (address %highest_bidder)))))))))))))) ;
  code { LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ; CDR ; IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair bool string)
           unit
           { DUP ; CAR ; NOT ; IF { CDR ; FAILWITH } { DROP ; UNIT } } ;
         LAMBDA
           (pair (pair (list (pair address (list (pair nat nat)))) address) address)
           (list operation)
           { DUP ;
             CAR ;
             CAR ;
             MAP { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CDR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CDR ;
                   PAIR ;
                   PAIR ;
                   DUP ;
                   CAR ;
                   CAR ;
                   MAP { SWAP ; DUP ; DUG 2 ; CDR ; PAIR } ;
                   NIL (pair address (list (pair address (pair nat nat)))) ;
                   SWAP ;
                   DIG 2 ;
                   CAR ;
                   CDR ;
                   PAIR ;
                   CONS ;
                   SWAP ;
                   CAR ;
                   CONTRACT %transfer
                     (list (pair (address %from_)
                                 (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                   IF_NONE { PUSH string "Invalid FA2 Address" ; FAILWITH } {} ;
                   PUSH mutez 0 ;
                   DIG 2 ;
                   TRANSFER_TOKENS } ;
             SWAP ;
             DROP } ;
         LAMBDA
           (pair nat
                 (pair (pair (pair address bool) (option address))
                       (pair nat
                             (pair nat
                                   (pair nat
                                         (big_map
                                            nat
                                            (pair mutez
                                                  (pair timestamp
                                                        (pair timestamp
                                                              (pair int
                                                                    (pair int
                                                                          (pair (list (pair address (list (pair nat nat)))) (pair nat (pair timestamp address))))))))))))))
           (pair mutez
                 (pair timestamp
                       (pair timestamp
                             (pair int
                                   (pair int
                                         (pair (list (pair address (list (pair nat nat)))) (pair nat (pair timestamp address))))))))
           { DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             SWAP ;
             CAR ;
             GET ;
             IF_NONE
               { PUSH string "Auction does not exist for given asset_id" ; FAILWITH }
               {} } ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT unit ;
             IF_NONE
               { PUSH string "Return address does not resolve to contract" ; FAILWITH }
               {} } ;
         LAMBDA
           (pair mutez
                 (pair timestamp
                       (pair timestamp
                             (pair int
                                   (pair int
                                         (pair (list (pair address (list (pair nat nat)))) (pair nat (pair timestamp address))))))))
           bool
           { DUP ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             ADD ;
             NOW ;
             COMPARE ;
             GT ;
             SWAP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             NOW ;
             COMPARE ;
             GE ;
             OR } ;
         DIG 7 ;
         DUP ;
         DUG 8 ;
         CDR ;
         DIG 8 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DIG 5 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     PUSH string "Amount must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CAR ;
                     DIG 2 ;
                     CAR ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 2 ;
                             DROP ;
                             DUP ;
                             CDR ;
                             IF_NONE
                               { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                               { SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { NONE address ; SWAP ; CAR ; CDR ; SENDER ; PAIR ; PAIR }
                                    { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             DUP ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         SOME ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     SWAP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR }
                   { DIG 7 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     PUSH string "Bidder must be an implicit account" ;
                     SOURCE ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Auction must be in progress" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     AND ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string
                          "Bid must raised by at least min_raise_percent of the previous bid or at least opening price if it is the first bid" ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     AMOUNT ;
                     COMPARE ;
                     GE ;
                     AND ;
                     PUSH nat 100 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DIG 2 ;
                     CAR ;
                     ADD ;
                     AMOUNT ;
                     COMPARE ;
                     GE ;
                     OR ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Admin cannot place a bid" ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NOW ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     COMPARE ;
                     LE ;
                     IF { SWAP ; DUP ; DUG 2 ; CDR ; CDR ; CDR ; CDR ; CAR ; NOW ; ADD }
                        { SWAP ; DUP ; DUG 2 ; CDR ; CDR ; CDR ; CDR ; CDR ; CDR ; CDR ; CAR } ;
                     DIG 2 ;
                     CDR ;
                     AMOUNT ;
                     PAIR ;
                     SENDER ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     NOW ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     DIG 3 ;
                     UPDATE ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     DIG 9 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     DIG 8 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Auction must not have ended" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     NOT ;
                     PAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Amount must be 0mutez" ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SELF ;
                     ADDRESS ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     CAR ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     NONE (pair mutez
                                (pair timestamp
                                      (pair timestamp
                                            (pair int
                                                  (pair int
                                                        (pair (list (pair address (list (pair nat nat)))) (pair nat (pair timestamp address)))))))) ;
                     SWAP ;
                     UPDATE ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     DUG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "end_time must be after start_time" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Auction time must be less than max_auction_time" ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SUB ;
                     ABS ;
                     COMPARE ;
                     LE ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Start_time must not have already passed" ;
                     NOW ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     GE ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string
                          "start_time must not be greater than the sum of current time and max_config_to_start_time" ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NOW ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SUB ;
                     ABS ;
                     COMPARE ;
                     LE ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Opening price must be greater than 0mutez" ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Amount must be equal to opening_price" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "Round_time must be greater than 0 seconds" ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SENDER ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     INT ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     INT ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     SELF ;
                     ADDRESS ;
                     SENDER ;
                     DIG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     SOME ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CAR ;
                     UPDATE ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     PUSH nat 1 ;
                     DIG 4 ;
                     CDR ;
                     CAR ;
                     ADD ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { DIG 8 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             PUSH string "Auction must have ended" ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             PAIR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             SWAP ;
             EXEC ;
             DROP ;
             PUSH string "Amount must be 0mutez" ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             PAIR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DROP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             SELF ;
             ADDRESS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             CAR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             CAR ;
             UNIT ;
             TRANSFER_TOKENS ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 3 ;
             NONE (pair mutez
                        (pair timestamp
                              (pair timestamp
                                    (pair int
                                          (pair int
                                                (pair (list (pair address (list (pair nat nat)))) (pair nat (pair timestamp address)))))))) ;
             SWAP ;
             UPDATE ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             CAR ;
             PAIR ;
             DUG 2 ;
             CONS ;
             PAIR } } }

